apiVersion: v1
kind: ConfigMap
metadata:
  name: vgo-iam-config
  namespace: vgo-microservices
data:
  config.yaml: |
    server:
      grpc:
        port: 9090
        network: tcp
        timeout: 30s
      http:
        port: 8080
        network: tcp
        timeout: 30s
        cors:
          allow_origins: ["*"]
          allow_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
          allow_headers: ["*"]
    
    database:
      driver: postgres
      dsn: "postgres://vgo_user:vgo_password@postgres:5432/vgo_iam?sslmode=disable"
      max_open_conns: 25
      max_idle_conns: 10
      conn_max_lifetime: 300s
    
    redis:
      addr: "redis:6379"
      password: "vgo_redis_password"
      db: 0
      pool_size: 10
      min_idle_conns: 5
    
    jwt:
      secret: "vgo-iam-jwt-secret-key-change-in-production"
      issuer: "vgo-iam"
      expire_time: 24h
    
    log:
      level: info
      format: json
      output: stdout
    
    tracing:
      jaeger:
        endpoint: "http://jaeger:14268/api/traces"
        service_name: "vgo-iam"
        sample_rate: 0.1
    
    metrics:
      prometheus:
        enabled: true
        path: "/metrics"
        port: 9091
    
    rate_limit:
      enabled: true
      requests_per_minute: 1000
      burst: 100
      cleanup_interval: 60s
    
    access_key:
      rotation:
        enabled: true
        max_age: 2160h  # 90 days
        warning_threshold: 168h  # 7 days
        auto_rotate: false
        grace_period: 24h
        notification_email: "admin@vgo.local"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vgo-iam
  namespace: vgo-microservices
  labels:
    app: vgo-iam
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vgo-iam
      version: v1
  template:
    metadata:
      labels:
        app: vgo-iam
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9091"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: vgo-iam
        image: vgo-iam:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: grpc
          protocol: TCP
        - containerPort: 9091
          name: metrics
          protocol: TCP
        env:
        - name: CONFIG_PATH
          value: "/app/config/config.yaml"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          grpc:
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          grpc:
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          grpc:
            port: 9090
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
      volumes:
      - name: config
        configMap:
          name: vgo-iam-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: vgo-iam-grpc
  namespace: vgo-microservices
  labels:
    app: vgo-iam
    service: grpc
spec:
  type: ClusterIP
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: grpc
  selector:
    app: vgo-iam
---
apiVersion: v1
kind: Service
metadata:
  name: vgo-iam-http
  namespace: vgo-microservices
  labels:
    app: vgo-iam
    service: http
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: vgo-iam
---
apiVersion: v1
kind: Service
metadata:
  name: vgo-iam-metrics
  namespace: vgo-microservices
  labels:
    app: vgo-iam
    service: metrics
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9091"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 9091
    targetPort: 9091
    protocol: TCP
    name: metrics
  selector:
    app: vgo-iam
---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vgo-iam-hpa
  namespace: vgo-microservices
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vgo-iam
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: vgo-iam-pdb
  namespace: vgo-microservices
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: vgo-iam